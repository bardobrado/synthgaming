import { Engine } from "@babylonjs/core/Engines/engine";
/**
 * Represents a the base class of any Babylon.js controls.
 * It helps ensuring they can all be initialized the same way and share
 * one Babylon.js instance if wished.
 */
export declare abstract class BaseControl {
    private readonly _canvas;
    private readonly _engine;
    /**
     * Gets the current Babylon.js engine used by the control.
     */
    readonly engine: Engine;
    /**
     * Gets the current Babylon.js engine used by the control.
     */
    readonly canvas: HTMLCanvasElement;
    /**
     * Instantiates a baseControl babylon.js object.
     * @param parent defines the parent of the control. It could be either:
     *   - A canvas element: the canvas we want to render the control in.
     *   - An engine instance: the Babylon.js engine to use to render the control.
     *   - Another Babylon.js control: this allows sharing the engine cross controls to mix and match them for instance.
     */
    constructor(parent: BaseControl | Engine | HTMLCanvasElement);
    /**
     * Dispose all the associated resources with WebGL.
     */
    dispose(): void;
}
