{"version":3,"file":"baseControl.js","sourceRoot":"","sources":["../../../src/coreControls/baseControl.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,gCAAgC,CAAC;AAExD;;;;GAIG;AACH,MAAM,OAAgB,WAAW;IAI7B;;OAEG;IACH,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED;;OAEG;IACH,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED;;;;;;OAMG;IACH,YAAY,MAAgD;QACxD,IAAI,MAAM,YAAY,iBAAiB,EAAE;YACrC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;SAClD;aACI,IAAI,MAAM,YAAY,MAAM,EAAE;YAC/B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,kBAAkB,EAAE,CAAC;YAC3C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;SACzB;aACI;YACD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;YAC7B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;SAChC;IACL,CAAC;IAED;;OAEG;IACI,OAAO;QACV,gCAAgC;QAChC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;CACJ","sourcesContent":["import { Engine } from \"@babylonjs/core/Engines/engine\";\r\n\r\n/**\r\n * Represents a the base class of any Babylon.js controls.\r\n * It helps ensuring they can all be initialized the same way and share\r\n * one Babylon.js instance if wished.\r\n */\r\nexport abstract class BaseControl {\r\n    private readonly _canvas: HTMLCanvasElement;\r\n    private readonly _engine: Engine;\r\n\r\n    /**\r\n     * Gets the current Babylon.js engine used by the control.\r\n     */\r\n    public get engine(): Engine {\r\n        return this._engine;\r\n    }\r\n\r\n    /**\r\n     * Gets the current Babylon.js engine used by the control.\r\n     */\r\n    public get canvas(): HTMLCanvasElement {\r\n        return this._canvas;\r\n    }\r\n\r\n    /**\r\n     * Instantiates a baseControl babylon.js object.\r\n     * @param parent defines the parent of the control. It could be either:\r\n     *   - A canvas element: the canvas we want to render the control in.\r\n     *   - An engine instance: the Babylon.js engine to use to render the control.\r\n     *   - Another Babylon.js control: this allows sharing the engine cross controls to mix and match them for instance.\r\n     */\r\n    constructor(parent: BaseControl | Engine | HTMLCanvasElement) {\r\n        if (parent instanceof HTMLCanvasElement) {\r\n            this._canvas = parent;\r\n            this._engine = new Engine(this._canvas, false);\r\n        }\r\n        else if (parent instanceof Engine) {\r\n            this._canvas = parent.getRenderingCanvas();\r\n            this._engine = parent;\r\n        }\r\n        else {\r\n            this._canvas = parent.canvas;\r\n            this._engine = parent.engine;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Dispose all the associated resources with WebGL.\r\n     */\r\n    public dispose(): void {\r\n        // Clear the renderer resources.\r\n        this.engine.dispose();\r\n    }\r\n}"]}