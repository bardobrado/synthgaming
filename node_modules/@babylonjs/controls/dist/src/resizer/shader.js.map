{"version":3,"file":"shader.js","sourceRoot":"","sources":["../../../src/resizer/shader.ts"],"names":[],"mappings":"AACA,iFAAiF;AAEjF,MAAM,YAAY,GAAG;;;;;;;;;;CAUpB,CAAC;AAEF,MAAM,cAAc,GAAG;;;;;;;;CAQtB,CAAC;AAEF,MAAM,CAAC,MAAM,mBAAmB,GAAG;IAC/B,IAAI,EAAE,SAAS;IACf,YAAY,EAAE,YAAY;IAC1B,cAAc;IACd,cAAc,EAAE,CAAC,UAAU,CAAC;IAC5B,YAAY,EAAE,CAAC,UAAU,CAAC;CAC7B,CAAA","sourcesContent":["\r\n// We are rendering only one picture fullscreen or on the full offscreen texture.\r\n\r\nconst vertexShader = `\r\n    attribute vec2 position;\r\n\r\n    varying vec2 uv;\r\n\r\n    void main(void) {\r\n        uv = position * 0.5 + 0.5;\r\n\r\n        gl_Position = vec4(position, 0.0, 1.0);\r\n    }\r\n`;\r\n\r\nconst fragmentShader = `\r\n    varying vec2 uv;\r\n\r\n    uniform sampler2D toResize;\r\n\r\n    void main(void) {\r\n        gl_FragColor = texture2D(toResize, uv);\r\n    }\r\n`;\r\n\r\nexport const ShaderConfiguration = {\r\n    name: \"resizer\",\r\n    vertexShader: vertexShader,\r\n    fragmentShader,\r\n    attributeNames: [\"position\"],\r\n    samplerNames: [\"toResize\"],\r\n}"]}